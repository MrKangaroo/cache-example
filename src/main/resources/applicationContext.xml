<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
   http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-3.0.xsd
   http://www.springframework.org/schema/aop classpath:/org/springframework/aop/config/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx classpath:/org/springframework/transaction/config/spring-tx-3.0.xsd">
  <context:annotation-config />
  <context:component-scan base-package="com.jarvis.cache_example.common" />  <!-- 自动扫描所有注解该路径 -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:module.properties</value>
      </list>
    </property>
  </bean>
  <!-- Jedis 连接池配置 -->
  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxTotal" value="1000" />
    <property name="maxIdle" value="10" />
    <property name="minIdle" value="5" />
    <property name="maxWaitMillis" value="2000" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
    <property name="testWhileIdle" value="false" />
  </bean>
  <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
    <constructor-arg ref="jedisPoolConfig" />
    <constructor-arg>
      <list>
        <bean class="redis.clients.jedis.JedisShardInfo">
          <constructor-arg value="${redis1.host}" />
          <constructor-arg type="int" value="${redis1.port}" />
          <constructor-arg value="instance:01" />
        </bean>
        <bean class="redis.clients.jedis.JedisShardInfo">
          <constructor-arg value="${redis2.host}" />
          <constructor-arg type="int" value="${redis2.port}" />
          <constructor-arg value="instance:02" />
        </bean>
        <bean class="redis.clients.jedis.JedisShardInfo">
          <constructor-arg value="${redis3.host}" />
          <constructor-arg type="int" value="${redis3.port}" />
          <constructor-arg value="instance:03" />
        </bean>
      </list>
    </constructor-arg>
  </bean>
  
  <bean id="autoLoadConfig" class="com.jarvis.cache.to.AutoLoadConfig">
    <property name="threadCnt" value="10" />
    <property name="maxElement" value="20000" />
    <property name="printSlowLog" value="true" />
    <property name="slowLoadTime" value="500" />
    <property name="sortType" value="1" />
    <property name="checkFromCacheBeforeLoad" value="true" />
  </bean>
  <bean id="cachePointCut" class="com.jarvis.cache.redis.ShardedCachePointCut" destroy-method="destroy">
    <constructor-arg ref="autoLoadConfig" />
    <property name="shardedJedisPool" ref="shardedJedisPool" />
  </bean>
  <aop:config>
    <aop:aspect ref="cachePointCut">
      <aop:pointcut id="daoCachePointcut"
        expression="execution(public !void com.jarvis.cache_example.common.dao..*.*(..)) &amp;&amp; @annotation(cache)" />
      <aop:around pointcut-ref="daoCachePointcut" method="proceed" />
    </aop:aspect>
    <aop:aspect ref="cachePointCut" order="1000"><!-- order 参数控制 aop通知的优先级，值越小，优先级越高 ，在事务提交后删除缓存 -->
      <aop:pointcut id="deleteCachePointcut"
        expression="execution(* com.jarvis.cache_example.common.dao..*.*(..)) &amp;&amp; @annotation(cacheDelete)" />
      <aop:after-returning pointcut-ref="deleteCachePointcut" method="deleteCache" returning="retVal"/>
    </aop:aspect>
  </aop:config>
  <bean id="userDAO" class="com.jarvis.cache_example.common.dao.UserDAO" />
</beans>